# Get a building type df only
type_building <-type
type_building <- unique(type_building)
colnames(type_building) <- c("type", "name") # rename columns
type_building <- type_building[order(type_building$type),]
zero_type <- data.frame("000", "not defined") # add the row not defined for some buildings
names(zero_type) <- c("type", "name")
type_building <- rbind(type_building,zero_type)
# data frame with only type code
type <- type[,-2]
id_type <- cbind.data.frame(htk$Målernr, type)  # merge ID and type
colnames(id_type) <- c("ID", "type") # rename columns
df_missing <- data.frame(setdiff(unique(df$ID),unique(htk$Målernr)),rep("000",6))
colnames(df_missing) <- c("ID", "type") # rename columns
id_type <- rbind(id_type,df_missing)
# Table of building types for appendix
print(xtable(type_building, type = "latex"), file = "type_building.tex")
# Outlier investigation
outliers <- df[c(3282,3357),]
df <- df[-c(3282,3357),]
#plot(df$temp, df$consumption, type="p", col=df$ID, pch=19)
#plot(consumption~temp, subset(df, ID==78185925), pch=19, col=2)
# Now add new type column to the df
df$ID <- factor(df$ID)
df <- merge(df, id_type ,by="ID")
# Calculating insulation
lm_u <- lm(consumption~ID*I(21-temp),df)
Anova(lm_u)
summary(lm_u)
# Store in LaTex table
lm_u_a <- Anova(lm_u)
print(xtable(lm_u_a, type = "latex"), file = "lm_u_anova.tex")
lm_u_sum <- summary(lm_u)
print(xtable(lm_u_sum, type = "latex"), file = "lm_u_summary.tex")
df_u <- data.frame(data.frame(lm_u$coefficients)[c(84:166),],row.names=levels(df$ID))
colnames(df_u) <- "u"
df_u$u <- df_u$u+df_u$u[1]
df_u$u[1] <- df_u$u[1]/2
df_u$ID <- levels(df$ID)
u_sum <- summary(df_u)
print(xtable(u_sum, type = "latex"), file = "u_summary.tex")
# Check dew collinearity
#pairs(subset(df, select=c(4:6)))
cor.test(df$temp, df$dew_pt)
temp_interval <- cut(df$temp, 4) # divide temperature in intervals to colour
png(filename="corr_dewpt.png", width=1750, height=1750, res=300)
p00 <- ggpairs(df[, c(4,5,6)], aes(colour = temp_interval),upper = list(continuous = wrap("cor", size = 2.5)))
for(i in 1:p00$nrow) {
for(j in 1:p00$ncol){
p00[i,j] <- p00[i,j] +
scale_fill_manual(values = rainbow(4)) +
scale_color_manual(values = rainbow(4))
}
}
p00 + theme_classic()
dev.off()
df <- df[,-5] # Correlation very high at 0.95, thus remove dew_pt
# Test simple model
lm1 <- lm(consumption~(ID+week)*I(21-temp), df)
Anova(lm1)
summary(lm1) # Comment in the report
# Store in latex table
lm1_a <- Anova(lm1)
print(xtable(lm1_a, type = "latex"), file = "lm1_anova.tex")
lm1_sum <- summary(lm1)
print(xtable(lm1_sum, type = "latex"), file = "lm1_summary.tex")
# Residual plots lm1
#plot1 <- qplot(1)
#plot2 <- qplot(1)
#grid.arrange(plot1, plot2, ncol=2)
png(filename="lm1_14residuals.png", width=2050, height=1750, res=300)
par(mfrow=c(2,2))
plot(lm1, col=df$ID, pch=19,cex = 0.6)
dev.off()
png(filename="lm1_residuals.png", width=2050, height=1750, res=300)
par(mfrow=c(1,1))
plot(lm1$residuals~I(21-temp),df, col=df$ID, pch=19,cex = 0.6, ylab="lm1 Residuals")
dev.off()
# residuals have different variance per building
# Calculate residuals variance per building
df_variance <- aggregate(unname(lm1$residuals), list(df$ID), var)
colnames(df_variance) <- c("ID","variance")
df <- merge(df, df_variance, by = "ID")
# Calculate mean consumption by building
df_mean <- aggregate(df$consumption, list(df$ID), mean)
colnames(df_mean) <- c("ID","mean")
df <- merge(df, df_mean, by = "ID")
# Plot variance per building against mean consumption per building
png(filename="variance_vs_mean_building.png", width=1750, height=1750, res=300)
plot(variance ~ mean, df, col=df$ID, pch=19, cex = 0.6,ylab="Variance", xlab="Mean")
lines(seq(-1,4,length.out=100),rep(0.03,100), col=2) # we propose a threshold of 0.03 variance to identify odd buildings
dev.off()
# Data frame of odd buildings (10) at variance greater than 0.03
df_oddvariance1 <- data.frame(subset(df, variance>0.03))
png(filename="oddbuildings10_var003.png", width=1750, height=1750, res=300)
plot(consumption~I(21-temp), type="p", df_oddvariance1, col=df$ID, pch=19,cex=0.6, ylab="Consumption")
dev.off()
df_oddvariance1 <- droplevels(df_oddvariance1)
oddvariance1 <- unique(df_oddvariance1$ID)
# Plot variance per building against mean consumption per building at lower variance
png(filename="var_mean_zoom.png", width=1750, height=1750, res=300)
plot(variance ~ mean, df,col=df$ID, cex=0.6, pch=19, xlim=c(0,1), ylim=c(0,0.03),ylab="Variance", xlab="Mean")
lines(seq(0,2,length.out=100),rep(0.0075,100), col=2) # 10+3 more outliers with a proposed threshold of 0.0075 variance to identify odd buildings
dev.off()
# Data frame of odd buildings (13) at variance greater than 0.0075
df_oddvariance2 <- data.frame(subset(df, variance>0.0075))
png(filename="oddbuildings13_var00075.png", width=1750, height=1750, res=300)
plot(consumption~I(21-temp), type="p", df_oddvariance2, col=df$ID, cex=0.6, pch=19, ylab="Consumption")
dev.off()
df_oddvariance2 <- droplevels(df_oddvariance2)
oddvariance2 <- unique(df_oddvariance2$ID)
# Plot mean consumption vs. ID
png(filename="mean_ID.png", width=1750, height=1550, res=300)
plot(mean~ID, df, col=df$ID, ylab="Consumption")
lines(df$ID,rep(0.5,length(df$ID)), col=2) # We propose a threshold at mean of 0.5 to "label" odd-buildings
dev.off()
# Data frame of odd buildings (16) at mean greater than 0.5
df_oddmean <- data.frame(subset(df, mean>0.5))
png(filename="oddbuildings16_mean05.png", width=1750, height=1750, res=300)
plot(consumption~I(21-temp), df_oddmean, col=ID, pch=19, ylab="Consumption", cex=0.6)
dev.off()
df_oddmean <- droplevels(df_oddmean)
oddmeanID5 <- unique(df_oddmean$ID)
# Create data frames to check
df_minus13 <- data.frame(subset(df, variance<0.0075))
df_minus13 <- droplevels(df_minus13)
# Plot consumption against date of odd variance buildings
png(filename="odd_var_vs_date.png", width=1750, height=1550, res=300)
par(mfrow=c(1,1), oma =c(1,2,0,4.5), mar = c(3,2,2,2))
plot(consumption~as.numeric(date), df_oddvariance2, col=ID, pch=19, cex=0.6, xlab="Date", ylab="Consumption")
par(xpd=NA)
legend(x=130, y=4.80, legend=levels(df_oddvariance2$ID), pch=19, col=unique(df_oddvariance2$ID), cex=0.8)
dev.off()
# There are some weird buildings and outliers that we could check
# Plot consumption against date of normal variance buildings
png(filename="normal_var_vs_date.png", width=1750, height=1750, res=300)
par(mfrow=c(1,1))
plot(consumption~as.numeric(date), df_minus13, col=ID, pch=19, cex=0.6, xlab="Temperature ºC", ylab="Consumption")
dev.off()
# There are some weird buildings and outliers that we could check
### Same as before but with temperature
# Plot consumption against temp of odd variance buildings
png(filename="odd_var_vs_temp.png", width=1750, height=1550, res=300)
par(mfrow=c(1,1), oma =c(0,0,0,4.5), mar = c(5,5,2,2))
plot(y=df_oddvariance2$consumption, x=(21-df_oddvariance2$temp), col=df_oddvariance2$ID, pch=19, cex=0.6, xlab="Temperature ºC", ylab="Consumption")
par(xpd=NA)
legend(x=25, y=5.2, legend=levels(df_oddvariance2$ID), pch=19, col=unique(df_oddvariance2$ID), cex=0.8)
dev.off()
# There are some weird buildings and outliers that we could check
# Plot consumption against date of normal variance buildings
png(filename="normal_var_vs_temp.png", width=1750, height=1750, res=300)
par(mfrow=c(1,1))
plot(y=df_minus13$consumption, x=(21-df_minus13$temp), col=df_minus13$ID, pch=19, cex=0.6, xlab="Temperature ºC", ylab="Consumption")
dev.off()
# There are some weird buildings and outliers that we could check
#---------------------------------------------------------------------------------
# Adjust consumption to eliminate 'size' of buildings in the model
df$adjconsumption <- df$consumption/df$mean
# Set final data frame
df_model <- df[,-c(2,3,4,8,10,11,12)]
df_model$temp <- 21-df$temp
# Full model with interactions (with adjusted consumption and date as week)
lm2 <- step(lm(adjconsumption~., df_model), scope=~.^3, k=log(nrow(df_model)), trace=FALSE)
anova2 <- Anova(lm2)
sum2 <- summary(lm2, correlation=TRUE)
corr2 <- data.frame(sum2$correlation)
# Clean df variance and mean again
df <- df[,-c(11,12)]
# Calculate residuals variance per building
df_variance <- aggregate(unname(lm2$residuals), list(df$ID), var)
colnames(df_variance) <- c("ID","variance")
df <- merge(df, df_variance, by = "ID")
# Calculate mean consumption by building
df_mean <- aggregate(df$consumption, list(df$ID), mean)
colnames(df_mean) <- c("ID","mean")
df <- merge(df, df_mean, by = "ID")
# Data frame of odd buildings (10) at variance greater than 0.1
df_oddvariance <- data.frame(subset(df, variance>0.1))
df_oddvariance <- droplevels(df_oddvariance)
oddvariance <- unique(df_oddvariance$ID)
# Create data frames to check
df_minus6 <- data.frame(subset(df, variance<0.1))
df_minus6 <- droplevels(df_minus6)
outliers <- c(1558,1552,1544,1611,1592,1568,1600,1629,1612,1603,3061,3045,3065,2971,2961,2955,3044,2995,3034,3055,3184,3133,3169,3123)
df <- df[-outliers,]
# Remove zeros (because of shutting down or starting consumption later)
df <- subset(df, consumption!=0)
# Remove odd buildings
df <- subset(df, ID!=65118812)
df <- subset(df, ID!=69999051)
df <- droplevels(df)
# Remove september observations
df$date <- as.Date(df$date)
df <- subset(df,date>"2018-09-24")
df$date <- factor(df$date)
# Set final data frame
df_model <- df[,-c(2,3,4,8,12,13)]
df_model$temp <- 21-df$temp
# Full model with interactions
lm3 <- step(lm(adjconsumption~., df_model), scope=~.^3, k=log(nrow(df_model)), trace=FALSE)
lm2_a <- Anova(lm2)
print(xtable(lm1_a, type = "latex"), file = "lm2_anova.tex")
lm2_sum <- summary(lm2)
print(xtable(lm1_sum, type = "latex"), file = "lm2_summary.tex")
# Adjust consumption to eliminate 'size' of buildings in the model
df$adjconsumption <- df$consumption/df$mean
#########################################################################
## Case 2:                                                             ##
## HTK Case: Energy performance of buildings                           ##
#########################################################################
# Authors: Bego?a Bolos Sierra, Laura Sans Comerma, Jorge Montalvo Arvizu
# Load Packages ---------------------------------------------------------------
require("car")
require("tidyverse")
library("stringr")
require("readxl")
require("lubridate")
library("dplyr")
# Visualization packages
require("xtable")
require("ggpubr")
require("ggplot2")
require("ggExtra")
require("GGally")
require('ggcorrplot')
require("gridExtra")
# Load data ----------------------------------------------------------
htk <- read_excel("~/Github/02441_Applied_Statistics/Case2/2_Data/HTK_building_data_share.xlsx")
load("~/Github/02441_Applied_Statistics/Case2/2_Data/WUndergroundHourly.RData")
files <- dir("~/Github/02441_Applied_Statistics/Case2/2_Data/meterdata", pattern="*.txt", full.names=TRUE)
# Load Data ---------------------------------------------------------------
# Load CampusNet Merged Data
df <- read_csv("~/Github/02441_Applied_Statistics/Case2/2_Data/merged_data.csv")
# Load Data ---------------------------------------------------------------
# Load CampusNet Merged Data
df <- read_csv("~/Github/02441_Applied_Statistics/Case2/2_Data/merged_data.csv")
# Set new directory for output files
setwd("~/Github/02441_Applied_Statistics/Case2/4_Images")
# Inspect Data
str(df)
summary(df)
sum_df <- summary(df)
print(xtable(sum_df, type = "latex"), file = "summary_df.tex")
# Date to workweek and weekend, per month
df$date <- as.Date(df$date)
df$day <- weekdays(df$date)
df$week <- week(df$date)
df$daytype <- weekdays(df$date)
workweek <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
weekend <- c("Saturday", "Sunday")
for (i in workweek) {
df$daytype[df$day == i] <- "Workweek"
}
for (i in weekend) {
df$daytype[df$day == i] <- "Weekend"
}
# Factorize variables
df$day <- factor(df$day)
df$daytype <- factor(df$daytype)
df$week <- factor(df$week)
df$ID <- factor(df$ID)
df$dir <- factor(df$dir)
df$cond <- factor(df$cond)
df$date <- factor(df$date)
str(df)
# Removing direction, visibility, condition, fog, and rain
plot(fog~cond, df)
plot(rain~cond, df) #it doesn't seem that condition gives interpretable info
df <- df[,-c(8,9,11,12,13)]
# Split building type from HTK file
type <- data.frame(str_split_fixed(htk$Anvendelse, " ", 2))
# Get a building type df only
type_building <-type
type_building <- unique(type_building)
colnames(type_building) <- c("type", "name") # rename columns
type_building <- type_building[order(type_building$type),]
zero_type <- data.frame("000", "not defined") # add the row not defined for some buildings
names(zero_type) <- c("type", "name")
type_building <- rbind(type_building,zero_type)
# data frame with only type code
type <- type[,-2]
id_type <- cbind.data.frame(htk$Målernr, type)  # merge ID and type
colnames(id_type) <- c("ID", "type") # rename columns
df_missing <- data.frame(setdiff(unique(df$ID),unique(htk$Målernr)),rep("000",6))
colnames(df_missing) <- c("ID", "type") # rename columns
id_type <- rbind(id_type,df_missing)
# Table of building types for appendix
print(xtable(type_building, type = "latex"), file = "type_building.tex")
# Outlier investigation
outliers <- df[c(3282,3357),]
df <- df[-c(3282,3357),]
#plot(df$temp, df$consumption, type="p", col=df$ID, pch=19)
#plot(consumption~temp, subset(df, ID==78185925), pch=19, col=2)
# Now add new type column to the df
df$ID <- factor(df$ID)
df <- merge(df, id_type ,by="ID")
# Calculating insulation
lm_u <- lm(consumption~ID*I(21-temp),df)
Anova(lm_u)
summary(lm_u)
# Store in LaTex table
lm_u_a <- Anova(lm_u)
print(xtable(lm_u_a, type = "latex"), file = "lm_u_anova.tex")
lm_u_sum <- summary(lm_u)
print(xtable(lm_u_sum, type = "latex"), file = "lm_u_summary.tex")
df_u <- data.frame(data.frame(lm_u$coefficients)[c(84:166),],row.names=levels(df$ID))
colnames(df_u) <- "u"
df_u$u <- df_u$u+df_u$u[1]
df_u$u[1] <- df_u$u[1]/2
df_u$ID <- levels(df$ID)
u_sum <- summary(df_u)
print(xtable(u_sum, type = "latex"), file = "u_summary.tex")
# Check dew collinearity
#pairs(subset(df, select=c(4:6)))
cor.test(df$temp, df$dew_pt)
temp_interval <- cut(df$temp, 4) # divide temperature in intervals to colour
df <- df[,-5] # Correlation very high at 0.95, thus remove dew_pt
# Test simple model
lm1 <- lm(consumption~(ID+week)*I(21-temp), df)
Anova(lm1)
summary(lm1) # Comment in the report
# Store in latex table
lm1_a <- Anova(lm1)
print(xtable(lm1_a, type = "latex"), file = "lm1_anova.tex")
lm1_sum <- summary(lm1)
print(xtable(lm1_sum, type = "latex"), file = "lm1_summary.tex")
# Residual plots lm1
#plot1 <- qplot(1)
#plot2 <- qplot(1)
#grid.arrange(plot1, plot2, ncol=2)
png(filename="lm1_14residuals.png", width=2050, height=1750, res=300)
par(mfrow=c(2,2))
plot(lm1, col=df$ID, pch=19,cex = 0.6)
dev.off()
png(filename="lm1_residuals.png", width=2050, height=1750, res=300)
par(mfrow=c(1,1))
plot(lm1$residuals~I(21-temp),df, col=df$ID, pch=19,cex = 0.6, ylab="lm1 Residuals")
dev.off()
# residuals have different variance per building
# Calculate residuals variance per building
df_variance <- aggregate(unname(lm1$residuals), list(df$ID), var)
colnames(df_variance) <- c("ID","variance")
df <- merge(df, df_variance, by = "ID")
# Calculate mean consumption by building
df_mean <- aggregate(df$consumption, list(df$ID), mean)
colnames(df_mean) <- c("ID","mean")
df <- merge(df, df_mean, by = "ID")
# Plot variance per building against mean consumption per building
png(filename="variance_vs_mean_building.png", width=1750, height=1750, res=300)
plot(variance ~ mean, df, col=df$ID, pch=19, cex = 0.6,ylab="Variance", xlab="Mean")
lines(seq(-1,4,length.out=100),rep(0.03,100), col=2) # we propose a threshold of 0.03 variance to identify odd buildings
dev.off()
# Data frame of odd buildings (10) at variance greater than 0.03
df_oddvariance1 <- data.frame(subset(df, variance>0.03))
png(filename="oddbuildings10_var003.png", width=1750, height=1750, res=300)
plot(consumption~I(21-temp), type="p", df_oddvariance1, col=df$ID, pch=19,cex=0.6, ylab="Consumption")
dev.off()
df_oddvariance1 <- droplevels(df_oddvariance1)
oddvariance1 <- unique(df_oddvariance1$ID)
# Plot variance per building against mean consumption per building at lower variance
png(filename="var_mean_zoom.png", width=1750, height=1750, res=300)
plot(variance ~ mean, df,col=df$ID, cex=0.6, pch=19, xlim=c(0,1), ylim=c(0,0.03),ylab="Variance", xlab="Mean")
lines(seq(0,2,length.out=100),rep(0.0075,100), col=2) # 10+3 more outliers with a proposed threshold of 0.0075 variance to identify odd buildings
dev.off()
# Data frame of odd buildings (13) at variance greater than 0.0075
df_oddvariance2 <- data.frame(subset(df, variance>0.0075))
png(filename="oddbuildings13_var00075.png", width=1750, height=1750, res=300)
plot(consumption~I(21-temp), type="p", df_oddvariance2, col=df$ID, cex=0.6, pch=19, ylab="Consumption")
dev.off()
df_oddvariance2 <- droplevels(df_oddvariance2)
oddvariance2 <- unique(df_oddvariance2$ID)
# Plot mean consumption vs. ID
png(filename="mean_ID.png", width=1750, height=1550, res=300)
plot(mean~ID, df, col=df$ID, ylab="Consumption")
lines(df$ID,rep(0.5,length(df$ID)), col=2) # We propose a threshold at mean of 0.5 to "label" odd-buildings
dev.off()
# Data frame of odd buildings (16) at mean greater than 0.5
df_oddmean <- data.frame(subset(df, mean>0.5))
png(filename="oddbuildings16_mean05.png", width=1750, height=1750, res=300)
plot(consumption~I(21-temp), df_oddmean, col=ID, pch=19, ylab="Consumption", cex=0.6)
dev.off()
df_oddmean <- droplevels(df_oddmean)
oddmeanID5 <- unique(df_oddmean$ID)
# Create data frames to check
df_minus13 <- data.frame(subset(df, variance<0.0075))
df_minus13 <- droplevels(df_minus13)
# Plot consumption against date of odd variance buildings
png(filename="odd_var_vs_date.png", width=1750, height=1550, res=300)
par(mfrow=c(1,1), oma =c(1,2,0,4.5), mar = c(3,2,2,2))
plot(consumption~as.numeric(date), df_oddvariance2, col=ID, pch=19, cex=0.6, xlab="Date", ylab="Consumption")
par(xpd=NA)
legend(x=130, y=4.80, legend=levels(df_oddvariance2$ID), pch=19, col=unique(df_oddvariance2$ID), cex=0.8)
dev.off()
# There are some weird buildings and outliers that we could check
# Plot consumption against date of normal variance buildings
png(filename="normal_var_vs_date.png", width=1750, height=1750, res=300)
par(mfrow=c(1,1))
plot(consumption~as.numeric(date), df_minus13, col=ID, pch=19, cex=0.6, xlab="Temperature ºC", ylab="Consumption")
dev.off()
# There are some weird buildings and outliers that we could check
### Same as before but with temperature
# Plot consumption against temp of odd variance buildings
png(filename="odd_var_vs_temp.png", width=1750, height=1550, res=300)
par(mfrow=c(1,1), oma =c(0,0,0,4.5), mar = c(5,5,2,2))
plot(y=df_oddvariance2$consumption, x=(21-df_oddvariance2$temp), col=df_oddvariance2$ID, pch=19, cex=0.6, xlab="Temperature ºC", ylab="Consumption")
par(xpd=NA)
legend(x=25, y=5.2, legend=levels(df_oddvariance2$ID), pch=19, col=unique(df_oddvariance2$ID), cex=0.8)
dev.off()
# There are some weird buildings and outliers that we could check
# Plot consumption against date of normal variance buildings
png(filename="normal_var_vs_temp.png", width=1750, height=1750, res=300)
par(mfrow=c(1,1))
plot(y=df_minus13$consumption, x=(21-df_minus13$temp), col=df_minus13$ID, pch=19, cex=0.6, xlab="Temperature ºC", ylab="Consumption")
dev.off()
# There are some weird buildings and outliers that we could check
# Adjust consumption to eliminate 'size' of buildings in the model
df$adjconsumption <- df$consumption/df$mean
# Set final data frame
df_model <- df[,-c(2,3,4,8,10,11,12)]
df_model$temp <- 21-df$temp
# Full model with interactions (with adjusted consumption and date as week)
lm2 <- step(lm(adjconsumption~., df_model), scope=~.^3, k=log(nrow(df_model)), trace=FALSE)
anova2 <- Anova(lm2)
sum2 <- summary(lm2, correlation=TRUE)
corr2 <- data.frame(sum2$correlation)
# Store in latex table
lm2_a <- Anova(lm2)
print(xtable(lm1_a, type = "latex"), file = "lm2_anova.tex")
lm2_sum <- summary(lm2)
print(xtable(lm1_sum, type = "latex"), file = "lm2_summary.tex")
print(xtable(lm2_sum, type = "latex"), file = "lm2_summary.tex")
# Clean df variance and mean again
df <- df[,-c(11,12)]
df_variance <- aggregate(unname(lm2$residuals), list(df$ID), var)
colnames(df_variance) <- c("ID","variance")
df <- merge(df, df_variance, by = "ID")
df_mean <- aggregate(df$consumption, list(df$ID), mean)
colnames(df_mean) <- c("ID","mean")
df <- merge(df, df_mean, by = "ID")
df_oddvariance <- data.frame(subset(df, variance>0.1))
plot(consumption~I(21-temp), type="p", df_oddvariance, col=ID, pch=19)
df_oddvariance <- droplevels(df_oddvariance)
oddvariance <- unique(df_oddvariance$ID)
df_minus6 <- data.frame(subset(df, variance<0.1))
df_minus6 <- droplevels(df_minus6)
outliers <- c(1558,1552,1544,1611,1592,1568,1600,1629,1612,1603,3061,3045,3065,2971,2961,2955,3044,2995,3034,3055,3184,3133,3169,3123)
df <- df[-outliers,]
# Remove zeros (because of shutting down or starting consumption later)
df <- subset(df, consumption!=0)
df <- subset(df, ID!=65118812)
df <- subset(df, ID!=69999051)
df <- droplevels(df)
df$date <- as.Date(df$date)
par(mfrow=c(1,1))
plot(consumption~date,subset(df,date<"2018-10-01"), pch=19, col=ID)
df <- subset(df,date>"2018-09-24")
df$date <- factor(df$date)
df_model <- df[,-c(2,3,4,8,12,13)]
df_model$temp <- 21-df$temp
# Full model with interactions
lm3 <- step(lm(adjconsumption~., df_model), scope=~.^3, k=log(nrow(df_model)), trace=FALSE)
# Full model with interactions
lm3 <- step(lm(df$adjconsumption~., df_model), scope=~.^3, k=log(nrow(df_model)), trace=FALSE)
anova3 <- Anova(lm3)
sum3 <- summary(lm3, correlation=TRUE)
corr3 <- data.frame(sum3$correlation)
# Store in latex table
lm3_a <- Anova(lm3)
print(xtable(lm3_a, type = "latex"), file = "lm3_anova.tex")
lm3_sum <- summary(lm3)
print(xtable(lm3_sum, type = "latex"), file = "lm3_summary.tex")
# Clean df variance and mean again
df <- df[,-c(12,13)]
f_variance <- aggregate(unname(lm3$residuals), list(df$ID), var)
colnames(df_variance) <- c("ID","variance")
df <- merge(df, df_variance, by = "ID")
df_variance <- aggregate(unname(lm3$residuals), list(df$ID), var)
colnames(df_variance) <- c("ID","variance")
df <- merge(df, df_variance, by = "ID")
df_mean <- aggregate(df$consumption, list(df$ID), mean)
colnames(df_mean) <- c("ID","mean")
df <- merge(df, df_mean, by = "ID")
df_oddvariance <- data.frame(subset(df, variance>0.03))
plot(consumption~I(21-temp), type="p", df_oddvariance, col=ID, pch=19)
df_oddvariance <- droplevels(df_oddvariance)
oddvariance <- unique(df_oddvariance$ID)
df_minus17 <- data.frame(subset(df, variance<0.03))
df_minus17 <- droplevels(df_minus17)
# Plot consumption against date of
df_oddvariance <- data.frame(subset(df, df$variance>0.03))
plot(consumption~I(21-temp), type="p", df_oddvariance, col=ID, pch=19)
df_oddvariance <- droplevels(df_oddvariance)
oddvariance <- unique(df_oddvariance$ID)
df_minus17 <- data.frame(subset(df, df$variance<0.03))
df_minus17 <- droplevels(df_minus17)
outliers <- c(531,4121,6905,930,915,303,1105,7473,7462,1641,1683,2907,2968,5775,4149,6663,2124,2260)
df <- df[-outliers,]
# Remove odd buildings
df <- subset(df, ID!=4529799)
df <- subset(df, ID!=4529800)
df <- subset(df, ID!=6393013)
df <- subset(df, ID!=69652588)
df <- subset(df, ID!=78185925)
df <- subset(df, ID!=65118848)
df <- droplevels(df)
# Set final data frame
df_model <- df[,-c(2,3,8,12,13)]
# Final model
lm4 <- step(lm(df$adjconsumption~.-temp-week+I(21-temp), df_model), scope=~.^3, k=log(nrow(df_model)), trace=FALSE)
# Final model
lm4 <- step(lm(adjconsumption~.-temp-week+I(21-temp), df_model), scope=~.^3, k=log(nrow(df_model)), trace=FALSE)
View(df_model)
