Anova(lm1b)
lm1c <- lm(data$Response~data$DetStock+data$CaStock)
Anova(lm1c)
lm1d <- lm(data$Response~data$DetStock*data$CaStock)
Anova(lm1d)
step(lm1d)
# Hardness doesn't seem to be significant, thus we keep increasing the complexity of the model without it
lm1e <- lm(data$Response~data$DetStock+data$Enzyme)
Anova(lm1e)
lm1f <- lm(data$Response~data$DetStock*data$Enzyme)
Anova(lm1f)
step(lm1f)
lm1g <- lm(data$Response~data$DetStock+data$Enzyme+data$EnzymeConc)
Anova(lm1g)
lm1h <- lm(data$Response~(data$DetStock+data$Enzyme)*data$EnzymeConc)
Anova(lm1h)
lm1i <- lm(data$Response~data$DetStock*(data$Enzyme+data$EnzymeConc))
Anova(lm1i)
drop1(lm1h, test="F")
drop1(lm1i, test="F")
BIC(lm1h, lm1i) # We prefer lm1h since BIC is better
AIC(lm1h, lm1i) # We prefer lm1h since AIC is better
lm1j <- lm(data$Response~data$DetStock*data$Enzyme*data$EnzymeConc)
Anova(lm1j)
drop1(lm1j, test="F")
lm1k <- update(lm1j, ~.-data$DetStock:data$Enzyme:data$EnzymeConc)
Anova(lm1k)
drop1(lm1k, test="F")
step(lm1j,k=3.8) # We get the same model by backward selection, thus this is our selected model for the complete dataframe
AIC(lm1a, lm1b, lm1c, lm1d, lm1e, lm1f, lm1g, lm1h, lm1i, lm1k)
BIC(lm1a, lm1b, lm1c, lm1d, lm1e, lm1f, lm1g, lm1h, lm1i, lm1k)
# Testing response given stock and enzyme
lm1a <- lm(df$Response~df$Stock, df)
Anova(lm1a)
#########################################################################
## Case 1:                                                             ##
## Effect of hardness and detergent on enzymatic catalysis             ##
#########################################################################
# Authors: BegoÃ±a Bolos Sierra, Laura Sans Comerma, Jorge Montalvo Arvizu
require("car")
require("ggplot2")
# Load data and clean
data <- read.table("~/Github/02441_Applied_Statistics/Case1/2_Data/SPR.txt", header = TRUE, sep="\t")
data <- data[,-c(1,2)]
# Alternative: copy dataframe and merge detergent with hardness
df <- data
df$Stock <- as.factor(paste(as.character(df$DetStock),as.character(df$CaStock)))
df <- df[,-c(4,5)]
# Summary Statistics ------------------------------------------------------
# Summary statistics of both data frames
str(data)
summary(data)
str(df)
summary(df)
# Data Visualization ------------------------------------------------------
# Data visualization of summary statistics of both data frames
pairs(data, col=as.numeric(data$Enzyme)+1, pch=19)
par(mfrow=c(1,2))
plot(data$Response~data$DetStock)
plot(data$Response~data$CaStock)
pairs(df, col=as.numeric(df$Enzyme)+1, pch=19)
par(mfrow=c(1,1))
plot(df$Response~df$Stock)
# Model selection (1) ------------------------------------------------------
# Testing response given detergent and hardness for data
lm1a <- lm(data$Response~data$DetStock)
Anova(lm1a)
lm1b <- lm(data$Response~data$CaStock)
Anova(lm1b)
lm1c <- lm(data$Response~data$DetStock+data$CaStock)
Anova(lm1c)
lm1d <- lm(data$Response~data$DetStock*data$CaStock)
Anova(lm1d)
step(lm1d)
# Hardness doesn't seem to be significant, thus we keep increasing the complexity of the model without it
lm1e <- lm(data$Response~data$DetStock+data$Enzyme)
Anova(lm1e)
lm1f <- lm(data$Response~data$DetStock*data$Enzyme)
Anova(lm1f)
step(lm1f)
lm1g <- lm(data$Response~data$DetStock+data$Enzyme+data$EnzymeConc)
Anova(lm1g)
lm1h <- lm(data$Response~(data$DetStock+data$Enzyme)*data$EnzymeConc)
Anova(lm1h)
lm1i <- lm(data$Response~data$DetStock*(data$Enzyme+data$EnzymeConc))
Anova(lm1i)
drop1(lm1h, test="F")
drop1(lm1i, test="F")
BIC(lm1h, lm1i) # We prefer lm1h since BIC is better
AIC(lm1h, lm1i) # We prefer lm1h since AIC is better
lm1j <- lm(data$Response~data$DetStock*data$Enzyme*data$EnzymeConc)
Anova(lm1j)
drop1(lm1j, test="F")
lm1k <- update(lm1j, ~.-data$DetStock:data$Enzyme:data$EnzymeConc)
Anova(lm1k)
drop1(lm1k, test="F")
step(lm1j,k=3.8) # We get the same model by backward selection, thus this is our selected model for the complete dataframe
AIC(lm1a, lm1b, lm1c, lm1d, lm1e, lm1f, lm1g, lm1h, lm1i, lm1k)
BIC(lm1a, lm1b, lm1c, lm1d, lm1e, lm1f, lm1g, lm1h, lm1i, lm1k)
# Testing response given stock
lm2a <- lm(df$Response~df$Stock, df)
Anova(lm2a)
lm2b <- lm(df$Response~df$Enzyme, df)
Anova(lm2b)
# Testing response given stock and enzyme
lm2c <- lm(df$Response~df$Enzyme+df$Stock, df)
Anova(lm2c)
lm2d <- lm(df$Response~df$Enzyme*df$Stock, df)
Anova(lm2d)
step(lm2d)
# Testing response given stock, enzyme and enzyme concentration
lm2e <- lm(df$Response~df$Enzyme+df$Stock+df$EnzymeConc, df)
Anova(lm2e)
lm2f <- lm(df$Response~(df$Enzyme+df$Stock)*df$EnzymeConc, df)
Anova(lm2f)
lm2g <- lm(df$Response~df$Enzyme*(df$Stock+df$EnzymeConc), df)
Anova(lm2g)
drop1(lm2f, test="F")
drop1(lm2g, test="F")
BIC(lm2f, lm2g) # We prefer lm2f since BIC is better
AIC(lm2f, lm2g) # We prefer lm2f since AIC is better
lm2h <- lm(df$Response~df$Enzyme*df$Stock*df$EnzymeConc, df)
Anova(lm2h)
drop1(lm2h, test="F")
lm2i <- update(lm2h, ~.-df$Enzyme:df$Stock:df$EnzymeConc)
Anova(lm2i)
drop1(lm2i, test="F")
step(lm2h,k=3.8)
step(lm2h,k=3.8)
lm2i <- update(lm2h, ~.-df$Enzyme:df$Stock:df$EnzymeConc)
Anova(lm2i)
drop1(lm2i, test="F")
step(lm2h,k=3.8)
drop1(lm2i, test="F")
step(lm2h,k=3.8)
lm2h <- lm(df$Response~df$Enzyme*df$Stock*df$EnzymeConc, df)
Anova(lm2h)
drop1(lm2h, test="F")
lm2i <- update(lm2h, ~.-df$Enzyme:df$Stock:df$EnzymeConc)
Anova(lm2i)
drop1(lm2i, test="F")
step(lm2h,k=2)
step(lm2h,k=3.8)
cor(df$Response,df$EnzymeConc)
# Data visualization of summary statistics of both data frames
pairs(data, col=as.numeric(data$Enzyme)+1, pch=19)
# Summary statistics of both data frames
str(data)
summary(data)
unique(EnzymeConc)
table(df$EnzymeConc)
table(df$Response)
table(df$EnzymeConc)
unique(EnzymeConc)
summary(data)
plot(data$Response)
drop1(lm1k, test="F")
step(lm1j,k=2) # We get the same model by backward selection, thus this is our selected model for the complete dataframe
Anova(lm1k)
BIC(lm1a, lm1b, lm1c, lm1d, lm1e, lm1f, lm1g, lm1h, lm1i, lm1k)
drop1(lm2f, test="F")
drop1(lm2g, test="F")
BIC(lm2f, lm2g) # We prefer lm2f since BIC is better
AIC(lm2f, lm2g) # We prefer lm2f since AIC is better
lm2h <- lm(df$Response~df$Enzyme*df$Stock*df$EnzymeConc, df)
Anova(lm2h)
drop1(lm2h, test="F")
lm2i <- update(lm2h, ~.-df$Enzyme:df$Stock:df$EnzymeConc)
Anova(lm2i)
drop1(lm2i, test="F")
step(lm2h,k=2)
AIC(lm1a, lm1b, lm1c, lm1d, lm1e, lm1f, lm1g, lm1h, lm1i, lm1k, lm2a, lm2b, lm2c, lm2d, lm2e, lm2f, lm2g, lm2h, lm2i)
BIC(lm1a, lm1b, lm1c, lm1d, lm1e, lm1f, lm1g, lm1h, lm1i, lm1k, lm2a, lm2b, lm2c, lm2d, lm2e, lm2f, lm2g, lm2h, lm2i)
AIC(lm1k, lm2i)
BIC(lm1k, lm2i)
summary(lm1k)
drop1(lm1k, test="F")
Anova(lm1k)
plot(lm1k)
par(mfrow=c(2,2))
plot(lm1k)
lmtest <- lm(data$Response~data$Enzyme*data$EnzymeConc*data$DetStock*data$CaStock)
summary(lmtest)
alias(lmtest)
alias(lm1k)
cor(data$Response,data$EnzymeConc)
summary(lm1k, correlation=TRUE)
Anova(lm1k)
summary(lm1k, correlation=TRUE)
par(mfrow=c(2,2))
plot(lm1k)
max(df$Response[df$EnzymeConc==2.5])
max(df$Response)
x <- df$Response[df$EnzymeConc==2.5]
x
plot(data$Response)
#########################################################################
## Case 1:                                                             ##
## Effect of hardness and detergent on enzymatic catalysis             ##
#########################################################################
# Authors: BegoÃ±a Bolos Sierra, Laura Sans Comerma, Jorge Montalvo Arvizu
require("car")
require("ggplot2")
# Load data and clean
data <- read.table("~/Github/02441_Applied_Statistics/Case1/2_Data/SPR.txt", header = TRUE, sep="\t")
data <- data[,-c(1,2)]
# Alternative: copy dataframe and merge detergent with hardness
df <- data
df$Stock <- as.factor(paste(as.character(df$DetStock),as.character(df$CaStock)))
df <- df[,-c(4,5)]
# Summary Statistics ------------------------------------------------------
# Structure and summary of both data frames
str(data)
summary(data)
str(df)
summary(df)
# Data Visualization ------------------------------------------------------
# Data visualization of summary statistics of both data frames
pairs(data, col=as.numeric(data$Enzyme)+1, pch=19)
par(mfrow=c(1,2))
plot(data$Response~data$DetStock)
plot(data$Response~data$CaStock)
pairs(df, col=as.numeric(df$Enzyme)+1, pch=19)
par(mfrow=c(1,1))
plot(df$Response~df$Stock)
# Model selection (1) ------------------------------------------------------
# Testing response given detergent and hardness for data
lm1a <- lm(data$Response~data$DetStock)
Anova(lm1a)
lm1b <- lm(data$Response~data$CaStock)
Anova(lm1b)
lm1c <- lm(data$Response~data$DetStock+data$CaStock)
Anova(lm1c)
lm1d <- lm(data$Response~data$DetStock*data$CaStock)
Anova(lm1d)
step(lm1d)
# Hardness doesn't seem to be significant, thus we keep increasing the complexity of the model without it by adding enzyme type
lm1e <- lm(data$Response~data$DetStock+data$Enzyme)
Anova(lm1e)
lm1f <- lm(data$Response~data$DetStock*data$Enzyme)
Anova(lm1f)
step(lm1f)
# Add enzyme concentration
lm1g <- lm(data$Response~data$DetStock+data$Enzyme+data$EnzymeConc)
Anova(lm1g)
lm1h <- lm(data$Response~(data$DetStock+data$Enzyme)*data$EnzymeConc)
Anova(lm1h)
lm1i <- lm(data$Response~data$DetStock*(data$Enzyme+data$EnzymeConc))
Anova(lm1i)
drop1(lm1h, test="F")
drop1(lm1i, test="F")
BIC(lm1h, lm1i) # We prefer lm1h since BIC is better
AIC(lm1h, lm1i) # We prefer lm1h since AIC is better
# Full interactions
lm1j <- lm(data$Response~data$DetStock*data$Enzyme*data$EnzymeConc)
Anova(lm1j)
drop1(lm1j, test="F")
lm1k <- update(lm1j, ~.-data$DetStock:data$Enzyme:data$EnzymeConc)
Anova(lm1k)
drop1(lm1k, test="F")
step(lm1j,k=2) # We get the same model by backward selection, thus lm1k is our selected model for the complete dataframe
AIC(lm1a, lm1b, lm1c, lm1d, lm1e, lm1f, lm1g, lm1h, lm1i, lm1k)
BIC(lm1a, lm1b, lm1c, lm1d, lm1e, lm1f, lm1g, lm1h, lm1i, lm1k)
# Model Selection (2) -----------------------------------------------------
# Testing response given stock
lm2a <- lm(df$Response~df$Stock, df)
Anova(lm2a)
lm2b <- lm(df$Response~df$Enzyme, df)
Anova(lm2b)
# Testing response given stock and enzyme
lm2c <- lm(df$Response~df$Enzyme+df$Stock, df)
Anova(lm2c)
lm2d <- lm(df$Response~df$Enzyme*df$Stock, df)
Anova(lm2d)
step(lm2d)
# Testing response given stock, enzyme and enzyme concentration (with interactions)
lm2e <- lm(df$Response~df$Enzyme+df$Stock+df$EnzymeConc, df)
Anova(lm2e)
lm2f <- lm(df$Response~(df$Enzyme+df$Stock)*df$EnzymeConc, df)
Anova(lm2f)
lm2g <- lm(df$Response~df$Enzyme*(df$Stock+df$EnzymeConc), df)
Anova(lm2g)
drop1(lm2f, test="F")
drop1(lm2g, test="F")
BIC(lm2f, lm2g) # We prefer lm2f since BIC is better
AIC(lm2f, lm2g) # We prefer lm2f since AIC is better
lm2h <- lm(df$Response~df$Enzyme*df$Stock*df$EnzymeConc, df)
Anova(lm2h)
drop1(lm2h, test="F")
lm2i <- update(lm2h, ~.-df$Enzyme:df$Stock:df$EnzymeConc)
Anova(lm2i)
drop1(lm2i, test="F")
step(lm2h,k=2) # We get the same model by backward selection, thus lm2i is our selected model for the complete dataframe
AIC(lm1a, lm1b, lm1c, lm1d, lm1e, lm1f, lm1g, lm1h, lm1i, lm1k, lm2a, lm2b, lm2c, lm2d, lm2e, lm2f, lm2g, lm2h, lm2i)
BIC(lm1a, lm1b, lm1c, lm1d, lm1e, lm1f, lm1g, lm1h, lm1i, lm1k, lm2a, lm2b, lm2c, lm2d, lm2e, lm2f, lm2g, lm2h, lm2i)
AIC(lm1k, lm2i)
BIC(lm1k, lm2i)
# It seems that lm1k is better (without the hardness of the water)
# Testing the model -------------------------------------------------------
Anova(lm1k)
summary(lm1k, correlation=TRUE)
par(mfrow=c(2,2))
plot(lm1k)
plot(df$Response)
par(mfrow=c(1,1))
plot(df$Response)
par(mfrow=c(1,1), pch=10)
par(mfrow=c(1,1), pch=19)
par(mfrow=c(1,1))
plot(df$Response, pch=19)
plot(df$Response, pch=19, col=as.numeric(df$EnzymeConc))
str(df)
plot(df$Response, col=df$EnzymeConc+1, pch=19)
levels(df$EnzymeConc)
levels(Stock)
levels(df$Stock)
plot(df$Response, col=df$EnzymeConc+1, pch=19)
legend("topleft", legend=df$EnzymeConc)
plot(df$Response, col=df$EnzymeConc+1, pch=19)
unique(df$EnzymeConc)
max(df$Response)
plot(df$Response, col=as.numeric(as.factor(df$EnzymeConc))+1, pch=19)
legend("topleft", legend=as.factor(df$EnzymeConc))
plot(df$Response, col=as.numeric(as.factor(df$EnzymeConc))+1, pch=19)
plot(df$Response, col=as.numeric(as.factor(df$EnzymeConc))+1, pch=as.numeric(df$Enzyme))
plot(df$Response, col=as.numeric(as.factor(df$EnzymeConc))+1, pch=as.numeric(df$Enzyme)+15)
par(mfrow=c(2,2))
plot(lm1k)
plot(lm1k, col=as.numeric(df$Enzyme)+1, pch=19)
plot(lm1k, col=as.numeric(data$EnzymeConc)+1, pch=19)
plot(lm1k, col=data$EnzymeConc+1, pch=19)
plot(lm1k, col=data$EnzymeConc+1, pch=19)
plot(lm1k, col=as.numeric(data$Enzyme+1), pch=19)
plot(lm1k, col=as.numeric(data$Enzyme+1), pch=19)
plot(lm1k, col=as.numeric(data$Enzyme), pch=19)
lm1l <- lm(data$Response~data$Enzyme*data$EnzymeConc*data$DetStock*data$CaStock)
step(lm1l, k=2)
lm1m <- step(lm1l, k=2)
lm1l$model
lm1m$terms
View(lm1m)
lm1m$terms
lm1m$terms[[3]]
lm1m <- lm(data$Response~results$terms[[3]])
lm1l <- lm(data$Response~data$Enzyme*data$EnzymeConc*data$DetStock*data$CaStock)
results <- step(lm1l, k=2)
lm1m <- lm(data$Response~results$terms[[3]])
results2 <- results$terms[[3]]
lm1m <- lm(data$Response~results2)
results2
lm1m <- lm(data$Response~as.character(results2))
step(lm1l)
?lognormal
??lognormal
# Testing transformations
data$Response <- log(df$Response)
View(data)
# Structure and summary of both data frames
str(data)
summary(data)
str(df)
summary(df)
# Load data and clean
data <- read.table("~/Github/02441_Applied_Statistics/Case1/2_Data/SPR.txt", header = TRUE, sep="\t")
data <- data[,-c(1,2)]
# Alternative: copy dataframe and merge detergent with hardness
df <- data
df$Stock <- as.factor(paste(as.character(df$DetStock),as.character(df$CaStock)))
df <- df[,-c(4,5)]
# Structure and summary of both data frames
str(data)
summary(data)
plot(df$Response~df$EnzymeConc)
unique(df$EnzymeConc)
plot(c(1,2,3,4),unique(df$EnzymeConc))
plot(c(4,1,2,3),unique(df$EnzymeConc))
plot(c(1,2,3,1),unique(df$EnzymeConc))
plot(c(2,3,4,1),unique(df$EnzymeConc))
lmtest <- lm(unique(df$EnzymeConc)~c(1,2,3,4))
summary(lmtest)
sort(unique(df$EnzymeConc))
y <- sort(unique(df$EnzymeConc))
x <- c(1,2,3,4)
plot(x,y)
lmtest <- lm(y~c)
lmtest <- lm(y~x)
summary(lmtest)
abline(lmtest)
plot(x,y, ylim=c(-10,10))
plot(x,y, ylim=c(-10,20))
plot(x,y, ylim=c(-10,15))
par(mfrow=c(1,1))
plot(x,y, ylim=c(-10,15))
abline(lmtest)
summary(lmtest)
# Testing transformations
data$EnzymeConc <- log(df$EnzymeConc)
View(data)
logtest <- lm(y~log(x))
lines(x,predict(logtest))
log(x)
x
log(1)
predict(logtest)
summary(logtest)
x <- c(0,1,2,3)
y
x
lmtest <- (y~x)
summary(lmtest)
lmtest <- lm(y~x)
summary(lmtest)
lines(x,predict(lmtest))
plot(y~x)
lines(x,predict(lmtest))
log(x)
log(x[2:4])
x
y
x2 <- c(0.01,y[2:3])
x2
x2 <- c(0.01,y[2:4])
x2
y
log(0.01)
log(x2)
log(2)
log(1)
x2 <- c(1,y[2:4])
x2
log(x2)
plot(y~x)
plot(y~x2)
plot(y~x)
plot(y~x2)
plot(y~x)
log(0.5)
lmtest
lines(predict(lmtest))
lmtest <- lm(y~x)
y
x
plot(y~x)
lines(x,predict(lmtest))
# Testing transformations
y <- sort(unique(data$EnzymeConc))
x <- 1:4
lm <- lm(y~x)
# Load data and clean
data <- read.table("~/Github/02441_Applied_Statistics/Case1/2_Data/SPR.txt", header = TRUE, sep="\t")
data <- data[,-c(1,2)]
# Testing transformations
y <- sort(unique(data$EnzymeConc))
x <- 1:4
x <- 0:3
lm <- lm(y~x)
plot(y~x)
lm <- lm(y~x)
summary(lm)
#########################################################################
## Case 1:                                                             ##
## Effect of hardness and detergent on enzymatic catalysis             ##
#########################################################################
# Authors: BegoÃ±a Bolos Sierra, Laura Sans Comerma, Jorge Montalvo Arvizu
require("car")
require("ggplot2")
# Load data and clean
data <- read.table("~/Github/02441_Applied_Statistics/Case1/2_Data/SPR.txt", header = TRUE, sep="\t")
data <- data[,-c(1,2)]
# Alternative: copy dataframe and merge detergent with hardness
df <- data
df$Stock <- as.factor(paste(as.character(df$DetStock),as.character(df$CaStock)))
df <- df[,-c(4,5)]
# Testing transformations
y <- sort(unique(data$EnzymeConc))
x <- 0:3
plot(y~x)
lm <- lm(y~x)
summary(lm)
#########################################################################
## Case 1:                                                             ##
## Effect of hardness and detergent on enzymatic catalysis             ##
#########################################################################
# Authors: BegoÃ±a Bolos Sierra, Laura Sans Comerma, Jorge Montalvo Arvizu
require("car")
require("ggplot2")
# Load data and clean
data <- read.table("~/Github/02441_Applied_Statistics/Case1/2_Data/SPR.txt", header = TRUE, sep="\t")
data <- data[,-c(1,2)]
# Alternative: copy dataframe and merge detergent with hardness
df <- data
df$Stock <- as.factor(paste(as.character(df$DetStock),as.character(df$CaStock)))
df <- df[,-c(4,5)]
# Testing transformations
y <- sort(unique(data$EnzymeConc))
x <- 0:3
plot(y~x)
lm <- lm(y~x)
summary(lm)
source('~/Github/02441_Applied_Statistics/Case1/3_Scripts/case1_v0_J.R', echo=TRUE)
y <- sort(unique(data$EnzymeConc))
x <- 0:3
plot(y~x)
lm <- lm(y~x)
par(mfrow=c(1,1))
y <- sort(unique(data$EnzymeConc))
x <- 0:3
plot(y~x)
lm <- lm(y~x)
lines(x,predict(lm))
summary(lm)
y
